int	redir_cmd(t_list *lst_cmd)
{
	int tmp_fd;
	int flag_append;
	int flag_trunc;
	int flag_redir_input;
	int first;

	tmp_fd = -1;
	flag_append = 0;
	flag_trunc = 0;
	first = 1;
	flag_redir_input = 0;
	while (lst_cmd)
	{
		if (first == 1)
			first = 0;
		else if (!first && (((t_cmd *)lst_cmd->content)->status_flag & FLG_OUTPUT || ((t_cmd *)lst_cmd->content)->status_flag & FLG_APPEND))
		{
			if (flag_trunc == 1)
				tmp_fd = open(((t_cmd *)lst_cmd->content)->args[0], O_WRONLY | O_TRUNC | O_CREAT, 0666);
			else if (flag_append == 1)
				tmp_fd = open(((t_cmd *)lst_cmd->content)->args[0], O_WRONLY | O_APPEND | O_CREAT, 0666);
			if (tmp_fd == -1)
			{
				ft_dprintf(STDERR_FILENO, "minishell: %s: %s\n", ((t_cmd *)lst_cmd->content)->args[0], strerror(errno));
				exit(ERROR);
			}
			close(tmp_fd);
		}
		else if (!first && (((t_cmd *)lst_cmd->content)->status_flag & FLG_INPUT))
		{
			tmp_fd = open(((t_cmd *)lst_cmd->content)->args[0], O_RDWR);
			if (tmp_fd == -1)
			{
				printf("exit in check\n");
				if (errno != 21)
				{
					ft_dprintf(STDERR_FILENO, "minishell: %s: %s\n", "stdin", strerror(errno));
					exit(ERROR);
				}
			}
			close(tmp_fd);
		}
		else if (!first)
		{
			if (flag_trunc == 1)
			{
				printf("lst trunc\n");
				tmp_fd = open(((t_cmd *)lst_cmd->content)->args[0], O_WRONLY | O_TRUNC | O_CREAT, 0666);
				flag_redir_input = 0;
			}
			else if (flag_append == 1)
			{
				printf("lst append\n");
				tmp_fd = open(((t_cmd *)lst_cmd->content)->args[0], O_WRONLY | O_APPEND | O_CREAT, 0666);
				flag_redir_input = 0;
			}
			else
			{
				printf("lst input redir\n");
				tmp_fd = open(((t_cmd *)lst_cmd->content)->args[0], O_RDWR);
				if (tmp_fd == -1)
					flag_redir_input = 0;
				else
					flag_redir_input = 1;
			}
			if (tmp_fd == -1)
			{
				if (flag_redir_input == 1)
					ft_dprintf(STDERR_FILENO, "minishell: %s: %s\n", "stdin", strerror(errno));
				else
					ft_dprintf(STDERR_FILENO, "minishell: %s: %s\n", ((t_cmd *)lst_cmd->content)->args[0], strerror(errno));
				exit(ERROR);
			}
			return (tmp_fd);
		}
		if (((t_cmd *)lst_cmd->content)->status_flag & FLG_OUTPUT)
		{
			flag_trunc = 1;
			flag_append = 0;
		}
		else if (((t_cmd *)lst_cmd->content)->status_flag & FLG_APPEND)
		{
			flag_trunc = 0;
			flag_append = 1;
		}
		lst_cmd = lst_cmd->next;
	}
	return (-1);
}